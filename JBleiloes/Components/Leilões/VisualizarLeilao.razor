@page "/leilao/{id}"
@using JBleiloes.data.Utilizadores
@using JBleiloes.Components.Layout
@using JBleiloes.data.Leiloes
@using JBleiloes.data
@using JBleiloes.data.Utilizadores

@layout MainLayout
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<div class="title">
    <h1>@leilao.titulo</h1>
</div>

<div class="container">
    <div class="left">
        <h2>Images</h2>
        <!-- Placeholder content, you can add images here later -->
        <img src="https://via.placeholder.com/150" alt="Placeholder Image 1">
        <img src="https://via.placeholder.com/150" alt="Placeholder Image 2">
        <img src="https://via.placeholder.com/150" alt="Placeholder Image 3">
    </div>
    <div class="right">
        <form>
            <h3>Valor inicial @leilao.valor_inicial</h3>
            <p>Lance atual: @leilao.valor_atual</p>
            <p>Termina em: @DaysLeft d @HoursLeft h @MinutesLeft m @SecondsLeft s</p>

            @if (jb.getUtilizador(leilao.vendedor).username != SessionUser.getSessionUser().username && SessionUser.getSessionUser().tipo_utilizador != 0)
            {
                <label for="inputField" onclick="">Sua Licitação:</label>
                <input type="text" id="inputField" name="inputField" @bind="licitação"/>

                <button type="button" @onclick="efetuarLicitação">Confirmar Licitação</button>
                <div class="bottom-left">
                    @if (addedToWatchlist)
                    {
                        <button type="button" class="rmWatchlist-button" @onclick="() => removerWatchlist(SessionUser.getSessionUser().username, leilao.id)"> Remover da Watchlist </button>
                    }
                    @if (!addedToWatchlist)
                    {
                        <button type="button" class="addWatchlist-button" @onclick="() => adicionarWatchlist(SessionUser.getSessionUser().username, leilao.id)"> Adicionar à Watchlist </button>
                    }
                </div>
            }
            @if (SessionUser.getSessionUser().tipo_utilizador == 0 && leilao.aprovado == false)
            {
                <div class="bottom-left">
                    <button type="button" @onclick="() => aprovar(leilao.id)">Aprovar Leilão</button>
                </div>
            }

            <div class="bottom-right">
                <p>Sold by: @vendedor_name</p>
            </div>
        </form>
    </div>
</div>

<style>
    .title {
        text-align: center;
        margin-bottom: 20px;
    }

    .container {
        display: flex;
    }

    .left {
        flex: 1;
        padding: 20px;
    }

    .right {
        flex: 1;
        padding: 20px;
        border: 1px solid #ccc;
        margin-left: 20px;
        position: relative;
    }

    .bottom-left {
        position: absolute;
        bottom: 20px;
        left: 20px;
    }

    .addWatchlist-button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .rmWatchlist-button {
        background-color: #FF0000; /* Red color */
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .bottom-right {
        position: absolute;
        bottom: 20px;
        right: 20px;
    }
</style>

@code {
    [Parameter]
    public string id { get; set; }

    private string? vendedor_name = null;
    private bool addedToWatchlist = false;
    private decimal licitação { get; set; }

    private Utilizador? user = @SessionUser.getSessionUser();

    private Leilao leilao;

    private int countDown = 0;
    private int TotalSecondsLeft { get; set; }
    private int DaysLeft { get; set; }
    private int HoursLeft { get; set; }
    private int MinutesLeft { get; set; }
    private int SecondsLeft { get; set; }
    private Timer timer;

    JBLeiloes jb = new JBLeiloes();

    protected override void OnInitialized()
    {
        if (int.TryParse(id, out int ident))
        {
            leilao = jb.getLeilaoId(ident);
            vendedor_name = jb.getUtilizador(leilao.vendedor).nome;
            addedToWatchlist = jb.podeAdicionarWatchList(SessionUser.getSessionUser().username, leilao.id);

            countDown = (int)(leilao.tempo_de_leilao - DateTime.Now).TotalSeconds;

            // Start the timer
            timer = new Timer(Countdown, null, 0, 1000);
        }
        else
        {

        }
    }

    private void Countdown(Object stateInfo)
    {
        var span = leilao.tempo_de_leilao - DateTime.Now;

        DaysLeft = span.Days;
        HoursLeft = span.Hours;
        MinutesLeft = span.Minutes;
        SecondsLeft = span.Seconds;

        if (span.TotalSeconds >= 0)
        {
            InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }
        else
        {
            timer.Dispose();
            jb.addHistoricoCompras(SessionUser.getSessionUser().username, leilao.id);
            jb.addHistoricoVendas(leilao.vendedor, leilao.id);
            jb.defineComprador(leilao.id, SessionUser.getSessionUser().username);
            jb.updateDonoVeiculo(leilao.veiculo, SessionUser.getSessionUser().username);
        }
    }


    private void efetuarLicitação()
    {
        if(licitação > leilao.valor_atual && licitação >= (leilao.valor_atual + leilao.valor_minimo)){

            jb.atualizarValorAtualLeilao(leilao.id, licitação);
            leilao.valor_atual = licitação;
            jb.registarLicitação(SessionUser.getSessionUser().username, licitação, leilao.id);

            if (MinutesLeft <= 5)
            {
                var new_end_time = DateTime.Now.AddMinutes(5);
                var span = new_end_time - DateTime.Now;
                DaysLeft = span.Days;
                HoursLeft = span.Hours;
                MinutesLeft = span.Minutes;
                SecondsLeft = span.Seconds;
                timer.Change(0, Timeout.Infinite); // Stop the current timer
                timer = new Timer(Countdown, null, 0, 1000); // Start a new timer
            }
        }
    }

    private void aprovar(int id_leilao)
    {
        jb.aprovaLeilao(id_leilao);
        StateHasChanged();
        NavigationManager.NavigateTo("/aprovar");
    }

    private void adicionarWatchlist(string username, int idLeilao)
    {
        jb.AdicionarWatchlist(username, idLeilao);
        addedToWatchlist = !addedToWatchlist;
    }
    private void removerWatchlist(string username, int idLeilao)
    {
        jb.removerWatchlist(username, idLeilao);
        addedToWatchlist = !addedToWatchlist;
    }
}