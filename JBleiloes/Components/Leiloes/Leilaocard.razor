@using System
@using JBleiloes.data.Leiloes
@using JBleiloes.data.Utilizadores
@using JBleiloes.data.Veiculos
@using JBleiloes.DB.Tabelas
@using JBleiloes.data.Licitacoes
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

@*<p>Id: @Leilao.id Titulo: @Leilao.titulo Vendedor: @Leilao.vendedor  Estado: @Leilao.a_decorrer VeiculoId: @Leilao.veiculo Minimo: @Leilao.valor_minimo</p> *@

@if (Leilao == null)
{
    <h3>Loading. . . </h3>
}
else
{
    var dbUtilizador = DBUtilizador.getInstance();
    var userVendedor = dbUtilizador.getUser(Leilao.vendedor);
    <div class="card leilao-card" @onclick="() => showLeilao(Leilao.id)">
        <div class="card-body">
            <h5 class="card-title">@Leilao.titulo</h5>
            <img class="ilustr" src="@GetFirstImageName(Leilao.imagem)" alt="Placeholder Image">
            <div class="bottom-info">
                <p><strong>Ultimo Lance:</strong> @Leilao.valor_inicial€</p>
                @if (DaysLeft > 0)
                {
                    <p class="orange-text"><strong>Termina em: @DaysLeft d @HoursLeft h</strong></p>
                }
                else if (HoursLeft > 0)
                {
                    <p class="orange-text"><strong>Termina em: @HoursLeft h @MinutesLeft m</strong></p>
                }
                else if (MinutesLeft > 0)
                {
                    <p class="orange-text"><strong>Termina em: @MinutesLeft m @SecondsLeft s</strong></p>
                }
                else
                {
                    <p class="orange-text"><strong>Termina em: @SecondsLeft s</strong></p>
                }
            </div>
        </div>
    </div>
}

<style>

    .card-title {
        margin-top: 10px;
    }

    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 100%;
        margin: auto;
        text-align: center;
        font-family: arial;
        height: 100%;
        width: 100%;
        font-size: 12px;
        border-radius: 10px;
        transition: transform 0.4s, filter 0.4s;
        filter: blur(0);
        display: flex;
        flex-direction: column;
    }

        .card:hover {
            transform: scale(1.3);
            cursor: pointer;
            filter: blur(5%);
            z-index: 2; /* Bring the hovered card to the front */
        }

    .card-body {
        flex: 1;
        padding: 2px 16px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        font-size: 18px;
    }

    .ilustr {
        width: 300px;
        height: 200px;
        border-radius: 10px;
        object-fit: cover;
        flex-shrink: 0;
    }

    .bottom-info {
        text-align: left;
        flex-shrink: 0;
    }

    .card:not(:hover) {
        outline: none;
    }

    .card:focus {
        outline: none;
    }

    .green-rectangle {
        background-color: #4CAF50; /* Green color */
        padding: 10px; /* Adjust the padding as needed */
        border-radius: 10px; /* Same as the card's border-radius */
        margin-bottom: 10px; /* Adjust the margin as needed */
        width: 100%; /* Occupy full width */
        box-sizing: border-box; /* Include padding and border in width calculation */
    }

        .green-rectangle h5,
        .green-rectangle p {
            margin: 0; /* Remove default margins for the title and paragraph */
            color: white; /* Text color inside the green rectangle */
        }

</style>

@code {
    [Parameter]
    public Leilao? Leilao { get; set; }

    public Veiculo carro;

    private Utilizador? user = @SessionUser.getSessionUser();

    private int countDown = 0;
    private int TotalSecondsLeft { get; set; }
    private int DaysLeft { get; set; }
    private int HoursLeft { get; set; }
    private int MinutesLeft { get; set; }
    private int SecondsLeft { get; set; }
    private Timer timer;

    protected override void OnInitialized()
    {
        timer = new Timer(Countdown, null, 0, 1000);
        carro = DBVeiculo.getInstance().getVeiculo(Leilao.veiculo);
    }

    private void showLeilao(int id)
    {
        NavigationManager.NavigateTo($"/leilao/{id}");
    }

    private void Countdown(Object stateInfo)
    {
        var span = Leilao.tempo_de_leilao - DateTime.Now;

        DaysLeft = span.Days;
        HoursLeft = span.Hours;
        MinutesLeft = span.Minutes;
        SecondsLeft = span.Seconds;

        if (span.TotalSeconds >= 0)
        {
            InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }
    }

    private string GetFirstImageName(string imageFileNames)
    {
        if (string.IsNullOrEmpty(imageFileNames))
        {
            return null;
        }

        var imageNames = imageFileNames.Split('|');
        return imageNames[0];
    }
}