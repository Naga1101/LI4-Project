@page "/"

@using JBleiloes.data.Leiloes
@using JBleiloes.data
@using JBleiloes.DB.Tabelas
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<PageTitle>Leilões a decorrer</PageTitle>

<div class="leilao-section">
    @if (leiloes == null)
    {
        <h3>Loading . . . </h3>
    }
    else
    {
        <div class="section-container">
            <!-- Admin Leiloes Section -->
            <div class="leiloes-stand-header">
                <div class="titulo-class">
                    <h2 style="font-size: 24px;">Lotes do Stand José Bonifácio</h2>
                </div>
                <div class="butao-leilao-class">
                    <button class="btn btn-link" style="font-size: 16px;" @onclick="() => pagLeiloesStand()">Ver todos os @leiloesAdmins.Count() leilões do Stand ></button>
                </div>
            </div>
            <div class="leiloescards-proxant-section">
                <div class="ant-cards">
                    @if (adminCurrentPageIndex > 0)
                    {
                        <a @onclick="PreviousAdminLeiloes" style="cursor: pointer;">
                            <img src="setaEsquerdaTPP.png" alt="Previous Admin Leiloes" class="arrow-img" />
                        </a>
                    }
                </div>

                <div class="admin-container">
                    @foreach (Leilao leilao in GetAdminLeiloesForCurrentPage())
                    {
                        <div class="admin-rectangle">
                            @if (aindaDentroTempo(leilao.tempo_de_leilao) == true)
                            {
                                <Leilaocard Leilao="leilao" />
                            }
                        </div>
                    }
                </div>
                <div class="prox-cards">
                    @if (adminCurrentPageIndex < getMaxPageIndexA() && (adminCurrentPageIndex + 1) * 4 < leiloesAdmins.Count())
                    {
                        <a @onclick="NextAdminLeiloes" style="cursor: pointer;">
                            <img src="setaDireitaTPP.png" alt="Next Admin Leiloes" class="arrow-img" />
                        </a>
                    }
                </div>
            </div>

        </div>

        <div class="line"></div>

        <div class="section-container">
            <!-- User Leiloes Section -->
            <div class="leiloes-users-header">
                <div class="titulo-class">
                    <h2 style="font-size: 24px;">Lotes de Utilizadores</h2>
                </div>

                <div class="butao-leilao-class">
                    <button class="btn btn-link" style="font-size: 16px;" @onclick="() => pagLeiloesUsers()">Ver todos os @leiloesUsers.Count(leilao => leilao.aprovado && leilao.a_decorrer) leilões dos Utilizadores ></button>
                </div>
            </div>
            <div class="leiloescards-proxant-section">
                <div class="ant-cards">
                    @if (userCurrentPageIndex > 0)
                    {
                        <a @onclick="PreviousUserLeiloes" style="cursor: pointer;">
                            <img src="setaEsquerdaTPP.png" alt="Previous User Leiloes" class="arrow-img" />
                        </a>
                    }
                </div>
                <div class="user-container">
                    @foreach (Leilao leilao in GetUserLeiloesForCurrentPage())
                    {
                        byte user_type = jb.getUserTypeLeilao(leilao.vendedor);
                        @if (user_type == 1 && leilao.aprovado == true && leilao.a_decorrer == true)
                        {
                            @if (aindaDentroTempo(leilao.tempo_de_leilao) == true)
                            {
                                <Leilaocard Leilao="leilao" />
                            }
                        }
                    }
                </div>
                 <div class="prox-cards">
                     @if (userCurrentPageIndex < getMaxPageIndexU() && (userCurrentPageIndex + 1) * 4 < leiloesUsers.Count())
                     {
                        <a @onclick="NextUserLeiloes" style="cursor: pointer;">
                            <img src="setaDireitaTPP.png" alt="Next User Leiloes" class="arrow-img" />
                        </a>
                     }
                 </div>
            </div>

        </div>
    }
</div>

<style>
    .leilao-section {
        width: 100%;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
    }

    .section-container {
        display: flex;
        flex-direction: column;
        align-items: baseline;
        gap: 15px; /* Add gap between sections */
        padding: 10px;
    }

    .admin-container,
    .user-container {
        display: flex;
        gap: 15px; /* Add gap between cards */
        padding: 10px;
        align-items: flex-start; /* Allow cards to expand above container limits */
        margin-right: 30px; /* Add right margin */
        margin-left: 30px; /* Add right margin */
    }

    .leiloes-stand-header,
    .leiloes-users-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        padding: 10px;
    }

    .titulo-class {
        font-size: 24px; /* Adjust font size */
        font-weight: bold; /* Make the text bold */
    }

    .butao-class {
        margin-left: auto; /* Push the button to the right */
    }

        .butao-leilao-class button {
            color: #007bff; /* Blue color for the button text */
            text-decoration: none;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px; /* Adjust font size */
        }

    .user-rectangle,
    .admin-rectangle {
        width: 354px;
        height: 400px;
        padding: 10px; /* Add some padding for better spacing */
        position: relative; /* Add relative positioning for pseudo-element */
    }

    .arrow {
        cursor: pointer;
        font-size: 24px;
        margin: 10px;
    }

    .line {
        width: 100%;
        height: 1px;
        background-color: #ccc; /* Color for the line */
        margin: 20px 0; /* Adjust margin as needed */
    }

    h2 {
        margin-top: 20px;
    }

    .leiloescards-proxant-section {
        display: flex;
        flex-direction: row;
        justify-content: space-between; /* Align items at the beginning, between, and at the end */
        align-items: center; /* Vertically center items */
        gap: 5px; /* Add gap between cards */
        padding: 10px;
        margin-right: 30px; /* Add right margin */
        margin-left: 30px; /* Add left margin */
    }

    .arrow-img {
        max-height: 400px;
        max-width: 100%;
        height: auto;
        width: auto;
    }

    .no-background {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
    }

    .prox-cards{
        margin-left: auto;
    }

</style>


@code {
    private static JBLeiloes jb = new JBLeiloes();

    private IEnumerable<Leilao> leiloes = DBLeilao.getInstance().GetLeiloes();
    private IEnumerable<Leilao> leiloesUsers = DBLeilao.getInstance().getAllUserLeiloes();
    private IEnumerable<Leilao> leiloesAdmins = DBLeilao.getInstance().getAllAdminLeiloes();

    // Variable to keep track of the current page index for both admin and user leiloes
    private int adminCurrentPageIndex = 0;
    private int userCurrentPageIndex = 0;

    private int getMaxPageIndexA()
    {
        int pageSize = 4;
        int totalAdminLeiloes = leiloesAdmins.Count();
        int maxLeiloesToShow = 12;

        return (int)Math.Ceiling((double)maxLeiloesToShow / pageSize) - 1;
    }

    private int getMaxPageIndexU()
    {
        int pageSize = 4;
        int totalAdminLeiloes = leiloesUsers.Count();
        int maxLeiloesToShow = 12;

        return (int)Math.Ceiling((double)maxLeiloesToShow / pageSize) - 1;
    }

    // Method to get the leiloes for the current page index for admins
    private ICollection<Leilao> GetAdminLeiloesForCurrentPage()
    {
        int pageSize = 4;
        int startIndex = adminCurrentPageIndex * pageSize;
        return leiloesAdmins.Skip(startIndex).Take(pageSize).ToList();
    }

    // Method to get the leiloes for the current page index for users
    private ICollection<Leilao> GetUserLeiloesForCurrentPage()
    {
        int pageSize = 4;
        int startIndex = userCurrentPageIndex * pageSize;
        return leiloesUsers.Skip(startIndex).Take(pageSize).ToList();
    }

    // Method to handle the next button click for admin leiloes
    private void NextAdminLeiloes()
    {
        int pageSize = 4;
        int totalAdminLeiloes = leiloesAdmins.Count();
        int maxLeiloesToShow = 12;

        // Calculate the maximum page index based on the limit
        int maxPageIndex = (int)Math.Ceiling((double)maxLeiloesToShow / pageSize) - 1;

        // Check if there are more leiloes to show and not exceeding the limit
        if (adminCurrentPageIndex < maxPageIndex && (adminCurrentPageIndex + 1) * pageSize < totalAdminLeiloes)
        {
            adminCurrentPageIndex++;
        }
    }

    private void PreviousAdminLeiloes()
    {
        int pageSize = 4;

        // Check if there are leiloes to go back to
        if (adminCurrentPageIndex > 0)
        {
            adminCurrentPageIndex--;
        }
    }

    // Method to handle the next button click for user leiloes
    // Method to handle the next button click for user leiloes
    private void NextUserLeiloes()
    {
        int pageSize = 4;
        int totalUserLeiloes = leiloesUsers.Count(leilao => leilao.aprovado == true && leilao.a_decorrer == true);
        int maxLeiloesToShow = 12;

        // Calculate the maximum page index based on the limit
        int maxPageIndex = (int)Math.Ceiling((double)maxLeiloesToShow / pageSize) - 1;

        // Check if there are more leiloes to show and not exceeding the limit
        if (userCurrentPageIndex < maxPageIndex && (userCurrentPageIndex + 1) * pageSize < totalUserLeiloes)
        {
            userCurrentPageIndex++;
        }
    }


    private void PreviousUserLeiloes()
    {
        int pageSize = 4;

        // Check if there are leiloes to go back to
        if (userCurrentPageIndex > 0)
        {
            userCurrentPageIndex--;
        }
    }

    private void pagLeiloesUsers()
    {
        NavigationManager.NavigateTo($"/leiloesUsers");
    }

    private void pagLeiloesStand()
    {
        NavigationManager.NavigateTo($"/leiloesStand");
    }

    private bool aindaDentroTempo(DateTime data)
    {
        if (data.CompareTo(DateTime.Now) < 0) return false;
        else return true;
    }
}