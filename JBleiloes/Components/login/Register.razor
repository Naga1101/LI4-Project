@page "/registar"
@using JBleiloes.Components.Layout
@using JBleiloes.data
@using System.Globalization
@using JBleiloes.data.Utilizadores
@layout LoginLayout
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<h3>Register</h3>

<div class="form-group">
    <label for="username">Username:</label>
    <input id="username" @bind="username" class="form-control" />
</div>

<div class="form-group">
    <label for="password">Password:</label>
    <input id="password" @bind="password" type="password" class="form-control" />
</div>

<div class="form-group">
    <label for="nome">Nome:</label>
    <input id="nome" @bind="nome" class="form-control" />
</div>

<div class="form-group">
    <label for="email">Email:</label>
    <input id="email" @bind="email" type="email" class="form-control" />
</div>

<div class="form-group">
    <label for="nCC">Nº_CC:</label>
    <input id="nCC" @bind="n_cc" class="form-control" />
</div>

<div class="form-group">
    <label for="nif">NIF:</label>
    <input id="nif" @bind="NIF" class="form-control" />
</div>

<div class="form-group">
    <label for="dataNascimento">Data Nascimento:</label>
    <input id="dataNascimento" @bind="data_nascimento" class="form-control" />
</div>

<button class="btn btn-primary" @onclick="registo">Register</button>


@code {

    public string username { get; private set; }
    public string password { get; private set; }
    public string nome { get; private set; }
    public string email { get; private set; }
    public int n_cc { get; private set; }
    public int NIF { get; private set; }
    public string data_nascimento { get; private set; }

    private bool AllFieldsFilled()
    {
        bool allFilled =
            !string.IsNullOrWhiteSpace(username)
            && !string.IsNullOrWhiteSpace(password)
            && !string.IsNullOrWhiteSpace(nome)
            && !string.IsNullOrWhiteSpace(email)
            && n_cc != 0
            && NIF != 0
            && !string.IsNullOrWhiteSpace(data_nascimento);

        return allFilled;
    }

    private bool AllFieldsValid()
    {
        if (!DateTime.TryParseExact(data_nascimento, "yyyy-MM-dd", null, DateTimeStyles.None, out _))
        {
            return false;
        }

        DateTime parsedDate = DateTime.ParseExact(data_nascimento, "yyyy-MM-dd", null);

        return parsedDate.Day <= 31 && parsedDate.Month <= 12;
    }


    private void registo()
    {
        if (!AllFieldsFilled() && !AllFieldsValid())
        {

        }
        else
        {
            //falta cond de validar se nao existe ninguem com mesmos dadso
            JBLeiloes jb = new JBLeiloes();
            Console.WriteLine(nome);
            if (@SessionUser.getSessionUser().tipo_utilizador == 0)
            {
                jb.registerFuncionario(username, password, nome, email, n_cc, NIF, data_nascimento);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                jb.registerUser(username, password, nome, email, n_cc, NIF, data_nascimento);
                NavigationManager.NavigateTo("/login");
            }
        }
    }

}